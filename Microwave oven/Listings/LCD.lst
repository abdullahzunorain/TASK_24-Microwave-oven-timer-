C51 COMPILER V9.60.7.0   LCD                                                               09/25/2024 11:40:16 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\Objects\LCD.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE LCD.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\LCD.l
                    -st) TABS(2) OBJECT(.\Objects\LCD.obj)

line level    source

   1          #include <reg51.h>
   2          #include "LCD.h"
   3          #include "KEYPAD.h"
   4          #include <string.h>
   5          
   6          #define lcd_data P0
   7          sbit RW=P2^5;
   8          sbit RS=P2^6;
   9          sbit EN=P2^7;
  10          
  11          void lcd_init()
  12          {
  13   1        lcd_command(0x38);
  14   1        lcd_command(0x0C);
  15   1        lcd_command(0x01);
  16   1        lcd_command(0x80);
  17   1      }
  18          
  19          void lcd_command(unsigned char cmd)
  20          {
  21   1        lcd_data=cmd;
  22   1        RW=0;
  23   1        RS=0;
  24   1        EN=1;
  25   1        delay(10);
  26   1        EN=0;
  27   1        delay(10);
  28   1      }
  29          void lcd_char(unsigned char dat)
  30          {
  31   1        lcd_data=dat;
  32   1        RW=0;
  33   1        RS=1;
  34   1        EN=1;
  35   1        delay(10);
  36   1        EN=0;
  37   1        delay(10);
  38   1      }
  39          void lcd_string(unsigned char *str)
  40          {
  41   1        int i;
  42   1        for(i=0; str[i]!=0; i++)
  43   1        {
  44   2          lcd_char(str[i]);
  45   2        }
  46   1        
  47   1      }
  48          void lcd_set_cursor(unsigned char row, unsigned char col)
  49          {
  50   1        unsigned char position;
  51   1        if(row==0)
  52   1        {
  53   2          position=0x80+col;
  54   2        }
C51 COMPILER V9.60.7.0   LCD                                                               09/25/2024 11:40:16 PAGE 2   

  55   1        else
  56   1        {
  57   2          position=0xC0+col;
  58   2        }
  59   1        lcd_command(position);
  60   1      }
  61          
  62          void delay (unsigned int time)
  63          {
  64   1        unsigned int i,j;
  65   1        for(i=0; i<time; i++)
  66   1        for(j=0; j<112; j++);
  67   1        
  68   1      }
  69          void   Timmer_Delay (unsigned char k)
  70          {
  71   1        unsigned int j;
  72   1        for(j=0; j<k; j++)
  73   1        {
  74   2        TH1=0x4B;
  75   2        TL1=0xFD;                  //50ms
  76   2        TF1=0;
  77   2        TR1=1;
  78   2        while(TF1==0);
  79   2        TF1=0;
  80   2        TR1=0;
  81   2        }
  82   1      }
  83          void Delay1 (unsigned int value)
  84          {
  85   1        unsigned int j;
  86   1        for(j=0; j<value; j++)
  87   1        {
  88   2          TH0=0xFC;
  89   2          TL0=0x64;
  90   2          TF0=0;
  91   2          TR0=1;
  92   2          
  93   2          while(TF0==0);
  94   2          TF0=0;
  95   2          TR0=0;
  96   2          
  97   2        }
  98   1      }
  99          
 100          void lcd_clear()
 101          {
 102   1        lcd_command(0x01);
 103   1      }
 104          
 105          
 106          
 107          int lcd_pow (int X, int Y)
 108          {
 109   1        unsigned char i;
 110   1        int result=1;
 111   1        
 112   1        for(i=0; i<Y; i++)
 113   1        {
 114   2          result*=X;
 115   2        }
 116   1        return result;  
C51 COMPILER V9.60.7.0   LCD                                                               09/25/2024 11:40:16 PAGE 3   

 117   1      }
 118          
 119          void lcd_shownum(unsigned char line, unsigned char column, int number, unsigned char length)
 120          {
 121   1        unsigned char i;
 122   1        lcd_set_cursor(line,column);
 123   1        for(i=length; i>0; i--)
 124   1        {
 125   2          lcd_char(number/lcd_pow(10,i-1)%10+'0');
 126   2        }
 127   1      }
 128          void lcd_showchar(unsigned char line, unsigned char column, char Char)
 129          {
 130   1        lcd_set_cursor(line,column);
 131   1        lcd_char(Char);
 132   1      }
 133          void lcd_showstring(unsigned char line, unsigned char column, char *string)
 134          {
 135   1        unsigned char i;
 136   1        lcd_set_cursor(line,column);
 137   1        for(i=0; string[i]!='\0'; i++)
 138   1        lcd_char(string[i]);
 139   1      }
 140          
 141          void lcd_clear_secondline ()
 142          {
 143   1        int i;
 144   1        lcd_command(0xc0);
 145   1        for(i=0; i<16; i++)
 146   1        {
 147   2          lcd_char(' ');
 148   2        }
 149   1      }
 150          void lcd_clearline (unsigned char x)
 151          {
 152   1        int i;
 153   1        lcd_command(0xc0);
 154   1        for(i=0; i<x; i++)
 155   1        {
 156   2          lcd_char(' ');
 157   2        }
 158   1      }
 159          
 160          
 161          
 162          
 163          
 164          
 165          
 166          
 167          
 168          
 169          
 170          
 171          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    463    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.60.7.0   LCD                                                               09/25/2024 11:40:16 PAGE 4   

   DATA SIZE        =   ----      26
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
